$color-primary: orange;
$color-secondary: gray;
$color-tertiary: green;

$font-lg: 40px;
$font-mid: 30px;
$font-sm: 20px;

.nav {
  background-color: transparentize($color-primary, 10)
    // lighten($color-primary, 30%);
    //darken
    //lighten
    ul li {
    list-style: none;
  }

  a {
    text-decoration: none;
    font-size: $font-sm;
    color: $color-secondary;

    &:hover {
      color: $color-tertiary;
    }
  }
}

.heading {
  color: $color-primary;
  font-size: $font-lg;
  background-color: $color-secondary;
  text-align: center;
}

@function fontSize($size) {
  @return $size * 2;
}

h1 {
  @extend .heading;

  &:hover {
    background-color: red;
  }
}

.footer h3 {
  @extend h1;
}

.banner p {
  font-size: fontSize($font-sm);
}

/*



.banner h1 {
  @extend .heading;

  &:hover {
    background-color: red;
  }
}

.footer h3 {
  @extend .heading;
}

will not work  need to get rid of class banner





*/

// nesting in sass

/*

Variable
Variable is a container, which store reusable data values


Nesting in SASS
Allow us to avoid writing many lines of css
easy to use
shortcut of creating CSS rules


Mixin
Mixin is a block of code which groups bunch of reusable CSS styles.


Extend
Extends allows one selector to inherit styles of another selector you can write cleaner and concise code



functions
function allows us ti to run code over  and over again when we call it
*/
